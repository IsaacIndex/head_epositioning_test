Index: app/src/main/java/com/example/bluetooth2/MainActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/bluetooth2/MainActivity.java	(date 1564284557882)
+++ app/src/main/java/com/example/bluetooth2/MainActivity.java	(date 1564284557882)
@@ -1,16 +1,13 @@
 package com.example.bluetooth2;
 
 import android.app.AlertDialog;
-import android.app.ProgressDialog;
 import android.bluetooth.BluetoothAdapter;
 import android.bluetooth.BluetoothDevice;
 
 import android.content.DialogInterface;
 import android.content.Intent;
 import android.database.Cursor;
-import android.os.AsyncTask;
 import android.os.Bundle;
-import android.os.Environment;
 import android.view.KeyEvent;
 import android.view.View;
 
@@ -21,9 +18,6 @@
 
 import android.widget.TextView;
 import android.widget.Toast;
-
-import java.io.File;
-import java.io.FileWriter;
 import java.util.ArrayList;
 import java.util.Set;
 
@@ -208,56 +202,5 @@
             }
         }
     }
-
-
-    public class ExportDatabaseCSVTask extends AsyncTask<String, Void, Boolean> {
-
-        private final ProgressDialog dialog = new ProgressDialog(MainActivity.this);
-        DBHelper dbhelper;
-        @Override
-        protected void onPreExecute() {
-            this.dialog.setMessage("Exporting database...");
-            this.dialog.show();
-            dbhelper = new DBHelper(MainActivity.this);
-        }
-
-        protected Boolean doInBackground(final String... args) {
-
-            File exportDir = new File(Environment.getExternalStorageDirectory(), "/codesss/");
-            if (!exportDir.exists()) { exportDir.mkdirs(); }
-
-            File file = new File(exportDir, "person.csv");
-            try {
-                file.createNewFile();
-                CSVWriter csvWrite = new CSVWriter(new FileWriter(file));
-                Cursor curCSV = dbhelper.raw();
-                csvWrite.writeNext(curCSV.getColumnNames());
-                while(curCSV.moveToNext()) {
-                    String arrStr[]=null;
-                    String[] mySecondStringArray = new String[curCSV.getColumnNames().length];
-                    for(int i=0;i<curCSV.getColumnNames().length;i++)
-                    {
-                        mySecondStringArray[i] =curCSV.getString(i);
-                    }
-                    csvWrite.writeNext(mySecondStringArray);
-                }
-                csvWrite.close();
-                curCSV.close();
-                return true;
-            } catch (IOException e) {
-                return false;
-            }
-        }
-
-        protected void onPostExecute(final Boolean success) {
-            if (this.dialog.isShowing()) { this.dialog.dismiss(); }
-            if (success) {
-                Toast.makeText(MainActivity.this, "Export successful!", Toast.LENGTH_SHORT).show();
-                ShareGif();
-            } else {
-                Toast.makeText(MainActivity.this, "Export failed", Toast.LENGTH_SHORT).show();
-            }
-        }
-    }
 }
 
